#!/usr/bin/env python3
"""
Script de prueba para verificar la funcionalidad de ignorar cuentas.
"""

import tkinter as tk
import logging
from src.gui.main_app import Dota2ConfigCopierApp
from src.utils.logging_utils import setup_logging

def test_ignore_functionality():
    """Prueba la funcionalidad de ignorar cuentas."""
    print("üß™ PROBANDO FUNCIONALIDAD DE IGNORAR CUENTAS")
    print("=" * 50)
    
    # Configurar logging para ver detalles
    setup_logging("DEBUG")
    
    # Crear ventana principal
    root = tk.Tk()
    
    try:
        # Crear aplicaci√≥n
        app = Dota2ConfigCopierApp(root)
        
        # Informaci√≥n inicial
        app_info = app.get_application_info()
        print(f"\nüìä ESTADO INICIAL:")
        print(f"   ‚Ä¢ Total de cuentas: {app_info['accounts_detected']}")
        print(f"   ‚Ä¢ Cuentas disponibles: {app_info['accounts_available']}")
        print(f"   ‚Ä¢ Cuentas ignoradas: {app_info['accounts_ignored']}")
        
        # Verificar archivo de configuraci√≥n
        config = app.config_service.config
        print(f"\nüìÅ CONFIGURACI√ìN ACTUAL:")
        print(f"   ‚Ä¢ Cuentas ignoradas en config: {config.cuentas_ignoradas}")
        print(f"   ‚Ä¢ Items por p√°gina: {config.items_por_pagina}")
        
        # Verificar si hay cuentas disponibles para ignorar
        if app.available_accounts:
            first_account = app.available_accounts[0]
            print(f"\nüéØ CUENTA DE PRUEBA:")
            print(f"   ‚Ä¢ SteamID: {first_account.steamid}")
            print(f"   ‚Ä¢ Nombre: {first_account.nombre}")
            
            # Verificar callback de ignorar
            main_tab = app.main_tab_widget
            if main_tab and hasattr(main_tab, 'on_account_ignored'):
                print(f"   ‚Ä¢ Callback configurado: ‚úÖ")
                
                # Intentar simular ignorar
                print(f"\n‚ö° SIMULANDO IGNORAR CUENTA...")
                try:
                    app._on_account_ignored(first_account)
                    print(f"   ‚Ä¢ Funci√≥n ejecutada correctamente")
                    
                    # Verificar estado despu√©s
                    new_info = app.get_application_info()
                    print(f"   ‚Ä¢ Cuentas disponibles despu√©s: {new_info['accounts_available']}")
                    print(f"   ‚Ä¢ Cuentas ignoradas despu√©s: {new_info['accounts_ignored']}")
                    
                except Exception as e:
                    print(f"   ‚Ä¢ ‚ùå Error al ignorar: {e}")
                    import traceback
                    traceback.print_exc()
            else:
                print(f"   ‚Ä¢ ‚ùå Callback NO configurado")
        else:
            print(f"\n‚ö†Ô∏è  No hay cuentas disponibles para probar")
        
        # Verificar widgets de la interfaz
        print(f"\nüñ•Ô∏è  VERIFICACI√ìN DE WIDGETS:")
        if hasattr(app, 'main_tab_widget') and app.main_tab_widget:
            print(f"   ‚Ä¢ main_tab_widget: ‚úÖ")
            if hasattr(app.main_tab_widget, 'account_widgets'):
                print(f"   ‚Ä¢ account_widgets: {len(app.main_tab_widget.account_widgets)} widgets")
                
                # Verificar primer widget si existe
                if app.main_tab_widget.account_widgets:
                    first_widget = app.main_tab_widget.account_widgets[0]
                    if hasattr(first_widget, 'btn_ignorar'):
                        print(f"   ‚Ä¢ btn_ignorar en primer widget: ‚úÖ")
                        if hasattr(first_widget, 'on_ignore_account'):
                            print(f"   ‚Ä¢ callback on_ignore_account: ‚úÖ")
                        else:
                            print(f"   ‚Ä¢ callback on_ignore_account: ‚ùå")
                    else:
                        print(f"   ‚Ä¢ btn_ignorar en primer widget: ‚ùå")
            else:
                print(f"   ‚Ä¢ account_widgets: ‚ùå")
        else:
            print(f"   ‚Ä¢ main_tab_widget: ‚ùå")
        
    except Exception as e:
        print(f"‚ùå Error durante la prueba: {e}")
        import traceback
        traceback.print_exc()
    finally:
        try:
            root.destroy()
        except:
            pass
    
    print(f"\nüèÅ PRUEBA COMPLETADA")

if __name__ == "__main__":
    test_ignore_functionality()
